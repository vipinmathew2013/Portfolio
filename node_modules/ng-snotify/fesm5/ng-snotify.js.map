{"version":3,"file":"ng-snotify.js","sources":["ng://ng-snotify/lib/enums/snotify-style.enum.ts","ng://ng-snotify/lib/decorators/transform-argument.decorator.ts","ng://ng-snotify/lib/utils.ts","ng://ng-snotify/lib/decorators/set-toast-type.decorator.ts","ng://ng-snotify/lib/models/snotify-toast.model.ts","ng://ng-snotify/lib/services/snotify.service.ts","ng://ng-snotify/lib/components/buttons/buttons.component.ts","ng://ng-snotify/lib/components/prompt/prompt.component.ts","ng://ng-snotify/lib/enums/snotify-position.enum.ts","ng://ng-snotify/lib/components/snotify/snotify.component.ts","ng://ng-snotify/lib/components/toast/toast.component.ts","ng://ng-snotify/lib/pipes/keys.pipe.ts","ng://ng-snotify/lib/pipes/truncate.pipe.ts","ng://ng-snotify/lib/snotify.module.ts","ng://ng-snotify/lib/toast-defaults.ts","ng://ng-snotify/public-api.ts","ng://ng-snotify/ng-snotify.ts"],"sourcesContent":["/**\r\n * Toast style.\r\n */\r\nexport enum SnotifyStyle {\r\n  simple = 'simple',\r\n  success = 'success',\r\n  error = 'error',\r\n  warning = 'warning',\r\n  info = 'info',\r\n  async = 'async',\r\n  confirm = 'confirm',\r\n  prompt = 'prompt'\r\n}\r\n","import { Snotify } from '../interfaces/snotify.interface';\r\nimport { SnotifyType } from '../types/snotify.type';\r\nimport { SnotifyStyle } from '../enums/snotify-style.enum';\r\n\r\n/**\r\n * Transform arguments to Snotify object\r\n * @param target any\r\n * @param propertyKey SnotifyType\r\n * @param descriptor PropertyDescriptor\r\n * @returns Snotify\r\n */\r\nexport function TransformArgument(target: any, propertyKey: SnotifyType, descriptor: PropertyDescriptor) {\r\n  if (propertyKey === SnotifyStyle.async) {\r\n    return {\r\n      value(...args: any[]) {\r\n        let result;\r\n        if (args.length === 2) {\r\n          result = {\r\n            title: null,\r\n            body: args[0],\r\n            config: null,\r\n            action: args[1]\r\n          };\r\n        } else if (args.length === 3) {\r\n          if (typeof args[1] === 'string') {\r\n            result = {\r\n              title: args[1],\r\n              body: args[0],\r\n              config: null,\r\n              action: args[2]\r\n            };\r\n          } else {\r\n            result = {\r\n              title: null,\r\n              body: args[0],\r\n              config: args[2],\r\n              action: args[1]\r\n            };\r\n          }\r\n        } else {\r\n          result = {\r\n            title: args[1],\r\n            body: args[0],\r\n            config: args[3],\r\n            action: args[2]\r\n          };\r\n        }\r\n        return descriptor.value.apply(this, [result as Snotify]);\r\n      }\r\n    };\r\n  } else {\r\n    return {\r\n      value(...args: any[]) {\r\n        let result;\r\n        if (args.length === 1) {\r\n          result = {\r\n            title: null,\r\n            body: args[0],\r\n            config: null\r\n          };\r\n        } else if (args.length === 3) {\r\n          result = {\r\n            title: args[1],\r\n            body: args[0],\r\n            config: args[2]\r\n          };\r\n        } else {\r\n          result = {\r\n            title: null,\r\n            config: null,\r\n            body: args[0],\r\n            [typeof args[1] === 'string' ? 'title' : 'config']: args[1]\r\n          };\r\n        }\r\n        return descriptor.value.apply(this, [result as Snotify]);\r\n      }\r\n    };\r\n  }\r\n}\r\n","/**\r\n * Generates random id\r\n * @return number\r\n */\r\nexport function uuid(): number {\r\n  return Math.floor(Math.random() * (Date.now() - 1)) + 1;\r\n}\r\n\r\n/**\r\n * Simple is object check.\r\n * @param item Object<any>\r\n * @returns boolean\r\n */\r\nexport function isObject(item): boolean {\r\n  return item && typeof item === 'object' && !Array.isArray(item);\r\n}\r\n\r\n/**\r\n * Deep merge objects.\r\n * @param sources Array<Object<any>>\r\n * @returns Object<any>\r\n */\r\nexport function mergeDeep(...sources) {\r\n  const target = {};\r\n  if (!sources.length) {\r\n    return target;\r\n  }\r\n\r\n  while (sources.length > 0) {\r\n    const source = sources.shift();\r\n    if (isObject(source)) {\r\n      for (const key in source) {\r\n        if (isObject(source[key])) {\r\n          target[key] = mergeDeep(target[key], source[key]);\r\n        } else {\r\n          Object.assign(target, { [key]: source[key] });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return target;\r\n}\r\n\r\nexport function animate(start: number, duration: number, callback: (currentValue: number, progress: number) => {}) {\r\n  let endTime;\r\n  requestAnimationFrame(timestamp => (endTime = timestamp + duration));\r\n  const calculate = () => {\r\n    requestAnimationFrame(timestamp => {\r\n      const runtime = timestamp - endTime;\r\n      const progress = Math.min(runtime / duration, 1) + start;\r\n      if (runtime < duration) {\r\n        if (callback(+(100 * progress).toFixed(2), progress)) {\r\n          calculate();\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n","import { SnotifyType } from '../types/snotify.type';\r\nimport { Snotify } from '../interfaces/snotify.interface';\r\n\r\n/**\r\n * Defines toast style depending on method name\r\n * @param target any\r\n * @param propertyKey SnotifyType\r\n * @param descriptor PropertyDescriptor\r\n * @returns value: ((...args: any[]) => any)\r\n */\r\nexport function SetToastType(target: any, propertyKey: SnotifyType, descriptor: PropertyDescriptor) {\r\n  return {\r\n    value(...args: any[]) {\r\n      (args[0] as Snotify).config = {\r\n        ...(args[0] as Snotify).config,\r\n        type: propertyKey\r\n      };\r\n      return descriptor.value.apply(this, args);\r\n    }\r\n  };\r\n}\r\n","import { SnotifyToastConfig } from '../interfaces/snotify-toast-config.interface';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { SnotifyEvent } from '../types/event.type';\r\nimport { SnotifyStyle } from '../enums/snotify-style.enum';\r\n// @TODO remove method in observable way\r\n/**\r\n * Toast main model\r\n */\r\nexport class SnotifyToast {\r\n  /**\r\n   * Emits SnotifyEvent\r\n   */\r\n  readonly eventEmitter = new Subject<SnotifyEvent>();\r\n  /**\r\n   * Holds all subscribers because we need to unsubscribe from all before toast get destroyed\r\n   */\r\n  private eventsHolder: Subscription[] = [];\r\n  /**\r\n   * Toast prompt value\r\n   */\r\n  value: string;\r\n  /**\r\n   * Toast validator\r\n   */\r\n  valid: boolean;\r\n  constructor(public id: number, public title: string, public body: string, public config: SnotifyToastConfig) {\r\n    if (this.config.type === SnotifyStyle.prompt) {\r\n      this.value = '';\r\n    }\r\n    this.on('hidden', () => {\r\n      this.eventsHolder.forEach((subscription: Subscription) => {\r\n        subscription.unsubscribe();\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscribe to toast events\r\n   * @returns this\r\n   * @param event SnotifyEvent\r\n   * @param action (toast: this) => void\r\n   */\r\n  on(event: SnotifyEvent, action: (toast: this) => void): this {\r\n    this.eventsHolder.push(\r\n      this.eventEmitter.subscribe((e: SnotifyEvent) => {\r\n        if (e === event) {\r\n          action(this);\r\n        }\r\n      })\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Tests if a toast equals this toast.\r\n   * @returns boolean true then equals else false.\r\n   * @param toast SnotifyToast\r\n   */\r\n  equals(toast: SnotifyToast): boolean {\r\n    return this.body === toast.body && this.title === toast.title && this.config.type === toast.config.type;\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { Observable, Subject, Subscription, from } from 'rxjs';\r\nimport { SnotifyToastConfig } from '../interfaces/snotify-toast-config.interface';\r\nimport { Snotify } from '../interfaces/snotify.interface';\r\nimport { SnotifyType } from '../types/snotify.type';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { TransformArgument } from '../decorators/transform-argument.decorator';\r\nimport { mergeDeep, uuid } from '../utils';\r\nimport { SetToastType } from '../decorators/set-toast-type.decorator';\r\nimport { SnotifyDefaults } from '../interfaces/snotify-defaults.interface';\r\nimport { SnotifyToast } from '../models/snotify-toast.model';\r\nimport { SnotifyStyle } from '../enums/snotify-style.enum';\r\n\r\n/**\r\n * SnotifyService - create, remove, config toasts\r\n */\r\n@Injectable()\r\n// tslint:disable:unified-signatures\r\nexport class SnotifyService {\r\n  readonly emitter = new Subject<SnotifyToast[]>();\r\n  readonly toastChanged = new Subject<SnotifyToast>();\r\n  readonly toastDeleted = new Subject<number>();\r\n  private notifications: SnotifyToast[] = [];\r\n\r\n  constructor(@Inject('SnotifyToastConfig') public config: SnotifyDefaults) {}\r\n  /**\r\n   * emit changes in notifications array\r\n   */\r\n  private emit(): void {\r\n    this.emitter.next(this.notifications.slice());\r\n  }\r\n\r\n  /**\r\n   * returns SnotifyToast object\r\n   * @param id Number\r\n   * @return SnotifyToast|undefined\r\n   */\r\n  get(id: number): SnotifyToast {\r\n    return this.notifications.find(toast => toast.id === id);\r\n  }\r\n\r\n  /**\r\n   * add SnotifyToast to notifications array\r\n   * @param toast SnotifyToast\r\n   */\r\n  private add(toast: SnotifyToast): void {\r\n    if (this.config.global.filterDuplicates && this.containsToast(toast)) {\r\n      return;\r\n    }\r\n    if (this.config.global.newOnTop) {\r\n      this.notifications.unshift(toast);\r\n    } else {\r\n      this.notifications.push(toast);\r\n    }\r\n    this.emit();\r\n  }\r\n\r\n  /**\r\n   * checks if the toast is in the collection.\r\n   * @param inToast SnotifyToast\r\n   * @returns boolean\r\n   */\r\n  private containsToast(inToast: SnotifyToast): boolean {\r\n    return this.notifications.some(toast => toast.equals(inToast));\r\n  }\r\n\r\n  /**\r\n   * If ID passed, emits toast animation remove, if ID & REMOVE passed, removes toast from notifications array\r\n   * @param id number\r\n   * @param remove boolean\r\n   */\r\n  remove(id?: number, remove?: boolean): void {\r\n    if (!id) {\r\n      return this.clear();\r\n    } else if (remove) {\r\n      this.notifications = this.notifications.filter(toast => toast.id !== id);\r\n      return this.emit();\r\n    }\r\n    this.toastDeleted.next(id);\r\n  }\r\n\r\n  /**\r\n   * Clear notifications array\r\n   */\r\n  clear(): void {\r\n    this.notifications = [];\r\n    this.emit();\r\n  }\r\n\r\n  /**\r\n   * Creates toast and add it to array, returns toast id\r\n   * @param snotify Snotify\r\n   * @return number\r\n   */\r\n  create(snotify: Snotify): SnotifyToast {\r\n    const config = mergeDeep(this.config.toast, this.config.type[snotify.config.type], snotify.config);\r\n    const toast = new SnotifyToast(uuid(), snotify.title, snotify.body, config);\r\n    this.add(toast);\r\n    return toast;\r\n  }\r\n\r\n  setDefaults(defaults: SnotifyDefaults): SnotifyDefaults {\r\n    return (this.config = mergeDeep(this.config, defaults) as SnotifyDefaults);\r\n  }\r\n\r\n  /**\r\n   * Create toast with simple style returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  simple(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with simple style returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  simple(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with simple style returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  simple(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with simple style  returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  simple(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  simple(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Create toast with success style returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  success(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with success style returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  success(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with success style returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  success(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with success style  returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  success(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  success(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Create toast with error style returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  error(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with error style returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  error(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with error style returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  error(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with error style  returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  error(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  error(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Create toast with info style returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  info(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with info style returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  info(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with info style returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  info(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with info style  returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  info(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  info(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Create toast with warning style returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  warning(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with warning style returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  warning(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with warning style returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  warning(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with warning style  returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  warning(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  warning(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Create toast with confirm style returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  confirm(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with confirm style returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  confirm(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with confirm style returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  confirm(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with confirm style  returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  confirm(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  confirm(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Create toast with Prompt style with two buttons, returns toast id;\r\n   * @param body string\r\n   * @returns number\r\n   */\r\n  prompt(body: string): SnotifyToast;\r\n  /**\r\n   * Create toast with Prompt style with two buttons, returns toast id;\r\n   * @param body string\r\n   * @param title string\r\n   * @returns number\r\n   */\r\n  prompt(body: string, title: string): SnotifyToast;\r\n  /**\r\n   * Create toast with Prompt style with two buttons, returns toast id;\r\n   * @param body string\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  prompt(body: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Create toast with Prompt style with two buttons, returns toast id;\r\n   * @param [body] string\r\n   * @param [title] string\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  prompt(body: string, title: string, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  prompt(args: any): SnotifyToast {\r\n    return this.create(args);\r\n  }\r\n\r\n  /**\r\n   * Creates async toast with Info style. Pass action, and resolve or reject it.\r\n   * @param body string\r\n   * @param action Promise<Snotify> | Observable<Snotify>\r\n   * @returns number\r\n   */\r\n  async(body: string, action: Promise<Snotify> | Observable<Snotify>): SnotifyToast;\r\n  /**\r\n   * Creates async toast with Info style. Pass action, and resolve or reject it.\r\n   * @param body string\r\n   * @param title string\r\n   * @param action Promise<Snotify> | Observable<Snotify>\r\n   * @returns number\r\n   */\r\n  async(body: string, title: string, action: Promise<Snotify> | Observable<Snotify>): SnotifyToast;\r\n  /**\r\n   * Creates async toast with Info style. Pass action, and resolve or reject it.\r\n   * @param body string\r\n   * @param action Promise<Snotify> | Observable<Snotify>\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  async(body: string, action: Promise<Snotify> | Observable<Snotify>, config: SnotifyToastConfig): SnotifyToast;\r\n  /**\r\n   * Creates async toast with Info style. Pass action, and resolve or reject it.\r\n   * @param body string\r\n   * @param title string\r\n   * @param action Promise<Snotify> | Observable<Snotify>\r\n   * @param [config] SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  async(\r\n    body: string,\r\n    title: string,\r\n    action: Promise<Snotify> | Observable<Snotify>,\r\n    config: SnotifyToastConfig\r\n  ): SnotifyToast;\r\n  /**\r\n   * Transform toast arguments into Snotify object\r\n   */\r\n  @TransformArgument\r\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\r\n  @SetToastType\r\n  async(args: any): SnotifyToast {\r\n    let async: Observable<any>;\r\n    if (args.action instanceof Promise) {\r\n      async = from(args.action);\r\n    } else {\r\n      async = args.action;\r\n    }\r\n\r\n    const toast = this.create(args);\r\n\r\n    toast.on('mounted', () => {\r\n      const subscription: Subscription = async.subscribe(\r\n        (next?: Snotify) => {\r\n          this.mergeToast(toast, next);\r\n        },\r\n        (error?: Snotify) => {\r\n          this.mergeToast(toast, error, SnotifyStyle.error);\r\n          subscription.unsubscribe();\r\n        },\r\n        () => {\r\n          this.mergeToast(toast, {}, SnotifyStyle.success);\r\n          subscription.unsubscribe();\r\n        }\r\n      );\r\n    });\r\n\r\n    return toast;\r\n  }\r\n\r\n  private mergeToast(toast, next, type?: SnotifyType) {\r\n    if (next.body) {\r\n      toast.body = next.body;\r\n    }\r\n    if (next.title) {\r\n      toast.title = next.title;\r\n    }\r\n    if (type) {\r\n      toast.config = mergeDeep(toast.config, this.config.global, this.config.toast[type], { type }, next.config);\r\n    } else {\r\n      toast.config = mergeDeep(toast.config, next.config);\r\n    }\r\n    if (next.html) {\r\n      toast.config.html = next.html;\r\n    }\r\n    this.emit();\r\n    this.toastChanged.next(toast);\r\n  }\r\n\r\n  /**\r\n   * Creates empty toast with html string inside\r\n   * @param html string | SafeHtml\r\n   * @param config SnotifyToastConfig\r\n   * @returns number\r\n   */\r\n  html(html: string | SafeHtml, config?: SnotifyToastConfig): SnotifyToast {\r\n    return this.create({\r\n      title: null,\r\n      body: null,\r\n      config: {\r\n        ...config,\r\n        ...{ html }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { SnotifyService } from '../../services/snotify.service';\r\nimport { SnotifyToast } from '../../models/snotify-toast.model';\r\n\r\n@Component({\r\n  selector: 'ng-snotify-button',\r\n  templateUrl: './buttons.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n * Buttons component\r\n */\r\nexport class ButtonsComponent {\r\n  /**\r\n   * Get buttons Array\r\n   */\r\n  @Input() toast: SnotifyToast;\r\n  constructor(private service: SnotifyService) {}\r\n\r\n  /**\r\n   * remove toast\r\n   */\r\n  remove() {\r\n    this.service.remove(this.toast.id);\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { SnotifyToast } from '../../models/snotify-toast.model';\r\n\r\n@Component({\r\n  selector: 'ng-snotify-prompt',\r\n  templateUrl: './prompt.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n/**\r\n * Prompt component. Part of PROMPT type\r\n */\r\nexport class PromptComponent {\r\n  /**\r\n   * Get PROMPT placeholder\r\n   */\r\n  @Input() toast: SnotifyToast;\r\n  /**\r\n   * Is PROMPT focused\r\n   */\r\n  isPromptFocused = false;\r\n}\r\n","/**\r\n * Toast position\r\n */\r\nexport enum SnotifyPosition {\r\n  leftTop = 'leftTop',\r\n  leftCenter = 'leftCenter',\r\n  leftBottom = 'leftBottom',\r\n  rightTop = 'rightTop',\r\n  rightCenter = 'rightCenter',\r\n  rightBottom = 'rightBottom',\r\n  centerTop = 'centerTop',\r\n  centerCenter = 'centerCenter',\r\n  centerBottom = 'centerBottom'\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { SnotifyService } from '../../services/snotify.service';\r\nimport { SnotifyToast } from '../../models/snotify-toast.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { SnotifyNotifications } from '../../interfaces/snotify-notifications.interface';\r\nimport { SnotifyPosition } from '../../enums/snotify-position.enum';\r\nimport { SnotifyEvent } from '../../types/event.type';\r\n\r\n@Component({\r\n  selector: 'ng-snotify',\r\n  templateUrl: './snotify.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SnotifyComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Toasts array\r\n   */\r\n  notifications: SnotifyNotifications;\r\n  /**\r\n   * Toasts emitter\r\n   */\r\n  emitter: Subscription;\r\n  /**\r\n   * Helper for slice pipe (maxOnScreen)\r\n   */\r\n  dockSizeA: number;\r\n  /**\r\n   * Helper for slice pipe (maxOnScreen)\r\n   */\r\n  dockSizeB: number | undefined;\r\n  /**\r\n   * Helper for slice pipe (maxAtPosition)\r\n   */\r\n  blockSizeA: number;\r\n  /**\r\n   * Helper for slice pipe (maxAtPosition)\r\n   */\r\n  blockSizeB: number | undefined;\r\n  /**\r\n   * Backdrop Opacity\r\n   */\r\n  backdrop = -1;\r\n  /**\r\n   * How many toasts with backdrop in current queue\r\n   */\r\n  withBackdrop: SnotifyToast[];\r\n\r\n  constructor(private service: SnotifyService) {}\r\n\r\n  /**\r\n   * Init base options. Subscribe to options, lifecycle change\r\n   */\r\n  ngOnInit() {\r\n    this.emitter = this.service.emitter.subscribe((toasts: SnotifyToast[]) => {\r\n      if (this.service.config.global.newOnTop) {\r\n        this.dockSizeA = -this.service.config.global.maxOnScreen;\r\n        this.dockSizeB = undefined;\r\n        this.blockSizeA = -this.service.config.global.maxAtPosition;\r\n        this.blockSizeB = undefined;\r\n        this.withBackdrop = toasts.filter(toast => toast.config.backdrop >= 0);\r\n      } else {\r\n        this.dockSizeA = 0;\r\n        this.dockSizeB = this.service.config.global.maxOnScreen;\r\n        this.blockSizeA = 0;\r\n        this.blockSizeB = this.service.config.global.maxAtPosition;\r\n        this.withBackdrop = toasts.filter(toast => toast.config.backdrop >= 0).reverse();\r\n      }\r\n      this.notifications = this.splitToasts(toasts.slice(this.dockSizeA, this.dockSizeB));\r\n      this.stateChanged('mounted');\r\n    });\r\n  }\r\n\r\n  // TODO: fix backdrop if more than one toast called in a row\r\n  /**\r\n   * Changes the backdrop opacity\r\n   * @param event SnotifyEvent\r\n   */\r\n  stateChanged(event: SnotifyEvent) {\r\n    if (!this.withBackdrop.length) {\r\n      if (this.backdrop >= 0) {\r\n        this.backdrop = -1;\r\n      }\r\n      return;\r\n    }\r\n    switch (event) {\r\n      case 'mounted':\r\n        if (this.backdrop < 0) {\r\n          this.backdrop = 0;\r\n        }\r\n        break;\r\n      case 'beforeShow':\r\n        this.backdrop = this.withBackdrop[this.withBackdrop.length - 1].config.backdrop;\r\n        break;\r\n      case 'beforeHide':\r\n        if (this.withBackdrop.length === 1) {\r\n          this.backdrop = 0;\r\n        }\r\n        break;\r\n      case 'hidden':\r\n        if (this.withBackdrop.length === 1) {\r\n          this.backdrop = -1;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Split toasts toasts into different objects\r\n   * @param toasts SnotifyToast[]\r\n   * @returns SnotifyNotifications\r\n   */\r\n  splitToasts(toasts: SnotifyToast[]): SnotifyNotifications {\r\n    const result: SnotifyNotifications = {};\r\n\r\n    for (const property in SnotifyPosition) {\r\n      if (SnotifyPosition.hasOwnProperty(property)) {\r\n        result[SnotifyPosition[property]] = [];\r\n      }\r\n    }\r\n\r\n    toasts.forEach((toast: SnotifyToast) => {\r\n      result[toast.config.position as string].push(toast);\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe subscriptions\r\n   */\r\n  ngOnDestroy() {\r\n    this.emitter.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { SnotifyService } from '../../services/snotify.service';\r\nimport { SnotifyToast } from '../../models/snotify-toast.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { SnotifyEvent } from '../../types/event.type';\r\nimport { SnotifyStyle } from '../../enums/snotify-style.enum';\r\n\r\n@Component({\r\n  selector: 'ng-snotify-toast',\r\n  templateUrl: './toast.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ToastComponent implements OnInit, OnDestroy, AfterContentInit {\r\n  /**\r\n   * Get toast from notifications array\r\n   */\r\n  @Input() toast: SnotifyToast;\r\n  @Output() stateChanged = new EventEmitter<SnotifyEvent>();\r\n\r\n  toastDeletedSubscription: Subscription;\r\n  toastChangedSubscription: Subscription;\r\n\r\n  /**\r\n   * requestAnimationFrame id\r\n   */\r\n  animationFrame: number;\r\n\r\n  /**\r\n   * Toast state\r\n   */\r\n  state = {\r\n    paused: false,\r\n    progress: 0,\r\n    animation: '',\r\n    isDestroying: false,\r\n    promptType: SnotifyStyle.prompt\r\n  };\r\n\r\n  constructor(private service: SnotifyService) {}\r\n\r\n  // Lifecycles\r\n\r\n  /**\r\n   * Init base options. Subscribe to toast changed, toast deleted\r\n   */\r\n  ngOnInit() {\r\n    this.toastChangedSubscription = this.service.toastChanged.subscribe((toast: SnotifyToast) => {\r\n      if (this.toast.id === toast.id) {\r\n        this.initToast();\r\n      }\r\n    });\r\n    this.toastDeletedSubscription = this.service.toastDeleted.subscribe(id => {\r\n      if (this.toast.id === id) {\r\n        this.onRemove();\r\n      }\r\n    });\r\n    if (!this.toast.config.timeout) {\r\n      this.toast.config.showProgressBar = false;\r\n    }\r\n    this.toast.eventEmitter.next('mounted');\r\n    this.state.animation = 'snotifyToast--in';\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    setTimeout(() => {\r\n      this.stateChanged.emit('beforeShow');\r\n      this.toast.eventEmitter.next('beforeShow');\r\n      this.state.animation = this.toast.config.animation.enter;\r\n    }, this.service.config.toast.animation.time / 5); // time to show toast push animation (snotifyToast--in)\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe subscriptions\r\n   */\r\n  ngOnDestroy(): void {\r\n    cancelAnimationFrame(this.animationFrame);\r\n    this.toast.eventEmitter.next('destroyed');\r\n    this.toastChangedSubscription.unsubscribe();\r\n    this.toastDeletedSubscription.unsubscribe();\r\n  }\r\n\r\n  /*\r\n  Event hooks\r\n   */\r\n\r\n  /**\r\n   * Trigger OnClick lifecycle\r\n   */\r\n  onClick() {\r\n    this.toast.eventEmitter.next('click');\r\n    if (this.toast.config.closeOnClick) {\r\n      this.service.remove(this.toast.id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trigger beforeDestroy lifecycle. Removes toast\r\n   */\r\n  onRemove() {\r\n    this.state.isDestroying = true;\r\n    this.toast.eventEmitter.next('beforeHide');\r\n    this.stateChanged.emit('beforeHide');\r\n    this.state.animation = this.toast.config.animation.exit;\r\n    setTimeout(() => {\r\n      this.stateChanged.emit('hidden');\r\n      this.state.animation = 'snotifyToast--out';\r\n      this.toast.eventEmitter.next('hidden');\r\n      setTimeout(() => this.service.remove(this.toast.id, true), this.toast.config.animation.time / 2);\r\n    }, this.toast.config.animation.time / 2);\r\n  }\r\n\r\n  /**\r\n   * Trigger onHoverEnter lifecycle\r\n   */\r\n  onMouseEnter() {\r\n    this.toast.eventEmitter.next('mouseenter');\r\n    if (this.toast.config.pauseOnHover) {\r\n      this.state.paused = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trigger onHoverLeave lifecycle\r\n   */\r\n  onMouseLeave() {\r\n    if (this.toast.config.pauseOnHover && this.toast.config.timeout) {\r\n      this.state.paused = false;\r\n      this.startTimeout(this.toast.config.timeout * this.state.progress);\r\n    }\r\n    this.toast.eventEmitter.next('mouseleave');\r\n  }\r\n\r\n  /**\r\n   * Remove toast completely after animation\r\n   */\r\n  onExitTransitionEnd() {\r\n    if (this.state.isDestroying) {\r\n      return;\r\n    }\r\n    this.initToast();\r\n    this.toast.eventEmitter.next('shown');\r\n  }\r\n\r\n  /*\r\n   Common\r\n   */\r\n\r\n  /**\r\n   * Initialize base toast config\r\n   *\r\n   */\r\n  initToast(): void {\r\n    if (this.toast.config.timeout > 0) {\r\n      this.startTimeout(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start progress bar\r\n   * @param startTime number\r\n   */\r\n  startTimeout(startTime: number = 0) {\r\n    const start = performance.now();\r\n    const calculate = () => {\r\n      this.animationFrame = requestAnimationFrame(timestamp => {\r\n        const runtime = timestamp + startTime - start;\r\n        const progress = Math.min(runtime / this.toast.config.timeout, 1);\r\n        if (this.state.paused) {\r\n          cancelAnimationFrame(this.animationFrame);\r\n        } else if (runtime < this.toast.config.timeout) {\r\n          this.state.progress = progress;\r\n          calculate();\r\n        } else {\r\n          this.state.progress = 1;\r\n          cancelAnimationFrame(this.animationFrame);\r\n          this.service.remove(this.toast.id);\r\n        }\r\n      });\r\n    };\r\n    calculate();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'keys',\r\n  pure: false\r\n})\r\n/**\r\n * Extract object keys pipe\r\n */\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(value: any, args: any[] = null): any {\r\n    if (!value) {\r\n      return value;\r\n    }\r\n    return Object.keys(value);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncate'\r\n})\r\n\r\n/**\r\n * Truncate toast text pipe\r\n */\r\nexport class TruncatePipe implements PipeTransform {\r\n  transform(value: string, ...args: Array<any>): any {\r\n    let limit = 40;\r\n    let trail = '...';\r\n    if (args.length > 0) {\r\n      limit = args.length > 0 ? parseInt(args[0], 10) : limit;\r\n      trail = args.length > 1 ? args[1] : trail;\r\n    }\r\n\r\n    return value.length > limit ? value.substring(0, limit) + trail : value;\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { SnotifyComponent } from './components/snotify/snotify.component';\r\nimport { SnotifyService } from './services/snotify.service';\r\nimport { KeysPipe } from './pipes/keys.pipe';\r\nimport { TruncatePipe } from './pipes/truncate.pipe';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonsComponent } from './components/buttons/buttons.component';\r\nimport { PromptComponent } from './components/prompt/prompt.component';\r\nimport { ToastComponent } from './components/toast/toast.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [SnotifyComponent, ToastComponent, TruncatePipe, ButtonsComponent, PromptComponent, KeysPipe],\r\n  exports: [SnotifyComponent, TruncatePipe, KeysPipe]\r\n})\r\nexport class SnotifyModule {\r\n  static forRoot(): ModuleWithProviders<SnotifyModule> {\r\n    return {\r\n      ngModule: SnotifyModule,\r\n      providers: [SnotifyService]\r\n    };\r\n  }\r\n}\r\n","import { SnotifyPosition } from './enums/snotify-position.enum';\r\nimport { SnotifyStyle } from './enums/snotify-style.enum';\r\n\r\n/**\r\n * Snotify default configuration object\r\n */\r\nexport const ToastDefaults = {\r\n  global: {\r\n    newOnTop: true,\r\n    maxOnScreen: 8,\r\n    maxAtPosition: 8,\r\n    filterDuplicates: false\r\n  },\r\n  toast: {\r\n    type: SnotifyStyle.simple,\r\n    showProgressBar: true,\r\n    timeout: 2000,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    bodyMaxLength: 150,\r\n    titleMaxLength: 16,\r\n    backdrop: -1,\r\n    icon: null,\r\n    iconClass: null,\r\n    html: null,\r\n    position: SnotifyPosition.rightBottom,\r\n    animation: { enter: 'fadeIn', exit: 'fadeOut', time: 400 }\r\n  },\r\n  type: {\r\n    [SnotifyStyle.prompt]: {\r\n      timeout: 0,\r\n      closeOnClick: false,\r\n      buttons: [\r\n        { text: 'Ok', action: null, bold: true },\r\n        { text: 'Cancel', action: null, bold: false }\r\n      ],\r\n      placeholder: 'Enter answer here...',\r\n      type: SnotifyStyle.prompt\r\n    },\r\n    [SnotifyStyle.confirm]: {\r\n      timeout: 0,\r\n      closeOnClick: false,\r\n      buttons: [\r\n        { text: 'Ok', action: null, bold: true },\r\n        { text: 'Cancel', action: null, bold: false }\r\n      ],\r\n      type: SnotifyStyle.confirm\r\n    },\r\n    [SnotifyStyle.simple]: {\r\n      type: SnotifyStyle.simple\r\n    },\r\n    [SnotifyStyle.success]: {\r\n      type: SnotifyStyle.success\r\n    },\r\n    [SnotifyStyle.error]: {\r\n      type: SnotifyStyle.error\r\n    },\r\n    [SnotifyStyle.warning]: {\r\n      type: SnotifyStyle.warning\r\n    },\r\n    [SnotifyStyle.info]: {\r\n      type: SnotifyStyle.info\r\n    },\r\n    [SnotifyStyle.async]: {\r\n      pauseOnHover: false,\r\n      closeOnClick: false,\r\n      timeout: 0,\r\n      showProgressBar: false,\r\n      type: SnotifyStyle.async\r\n    }\r\n  }\r\n};\r\n","/*\r\n * Public API Surface of ng-snotify\r\n */\r\n\r\nexport * from './lib/components';\r\nexport * from './lib/enums';\r\nexport * from './lib/interfaces';\r\nexport * from './lib/models';\r\nexport * from './lib/pipes';\r\nexport * from './lib/services';\r\nexport * from './lib/snotify.module';\r\nexport * from './lib/toast-defaults';\r\nexport * from './lib/types';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ButtonsComponent as ɵh} from './lib/components/buttons/buttons.component';\nexport {PromptComponent as ɵi} from './lib/components/prompt/prompt.component';\nexport {SnotifyComponent as ɵa} from './lib/components/snotify/snotify.component';\nexport {ToastComponent as ɵf} from './lib/components/toast/toast.component';\nexport {SetToastType as ɵe} from './lib/decorators/set-toast-type.decorator';\nexport {TransformArgument as ɵd} from './lib/decorators/transform-argument.decorator';\nexport {SnotifyDefaults as ɵc} from './lib/interfaces/snotify-defaults.interface';\nexport {KeysPipe as ɵj} from './lib/pipes/keys.pipe';\nexport {TruncatePipe as ɵg} from './lib/pipes/truncate.pipe';\nexport {SnotifyService as ɵb} from './lib/services/snotify.service';"],"names":[],"mappings":"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"}